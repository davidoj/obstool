# -*- coding: utf-8 -*-
# Generated by Django 1.11b1 on 2017-04-18 04:12
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FeedbackObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, help_text='Enter observation date', verbose_name='Observation Date')),
                ('obsnum', models.CharField(choices=[('A', 'Observation A (first of two)'), ('B', 'Observation B (second of two)')], help_text='Is this the first or second observation?', max_length=1, verbose_name='Observation Index')),
            ],
            options={
                'verbose_name': 'Feedback observation',
                'verbose_name_plural': 'Feedback observations',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='short name', max_length=100)),
                ('description', models.CharField(blank=True, default='', help_text='extended description', max_length=5000)),
            ],
            options={
                'verbose_name': 'observation item',
                'verbose_name_plural': 'observation items',
            },
        ),
        migrations.CreateModel(
            name='MbMInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField(help_text='How many minutes into the lesson is this observation?', verbose_name='Minute')),
                ('first10', models.CharField(blank=True, default='', max_length=5000, verbose_name='First 10 seconds')),
                ('location', models.CharField(blank=True, choices=[('D', 'Desk'), ('S', 'Stationary'), ('M', 'Moving around room'), ('O', 'Out of room')], default='', max_length=2, verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Minute by minute observation',
                'verbose_name_plural': 'Minute by minute observations',
            },
        ),
        migrations.CreateModel(
            name='NumberedResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(choices=[(1, '1 (No evidence)'), (2, '2 (Little evidence)'), (3, '3 (Some evidence)'), (4, '4 (Lots of evidence)'), (5, '5 (Great deal of evidence)')], help_text='How much evidence of this item did you see', verbose_name='Score')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Notes')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='observations.Item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Observer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Obsform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Observation template',
                'verbose_name_plural': 'Observation templates',
            },
        ),
        migrations.CreateModel(
            name='ReviewObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, help_text='Enter observation date', verbose_name='Observation Date')),
                ('obsnum', models.CharField(choices=[('A', 'Observation A (first of two)'), ('B', 'Observation B (second of two)')], help_text='Is this the first or second observation?', max_length=1, verbose_name='Observation Index')),
                ('observer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Observer')),
            ],
            options={
                'verbose_name': 'Review observation',
                'verbose_name_plural': 'Review observations',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('region', models.CharField(choices=[('alice', 'Alice Springs'), ('barkly', 'Barkly')], max_length=50, verbose_name='Region')),
                ('remoteness', models.CharField(choices=[('urban', 'Urban'), ('remote', 'Remote'), ('vremote', 'Very Remote')], max_length=50, verbose_name='Remoteness')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('identifier', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Teacher Identifier')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.School', verbose_name="Teacher's School")),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FBInteraction',
            fields=[
                ('mbminteraction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.MbMInteraction')),
                ('aspiration_feedback', models.BooleanField(default=False, help_text='Delivering feedback that is aspirational', verbose_name='Aspirational feedback')),
                ('jit_feedback', models.BooleanField(default=False, help_text='Delivering feedback just in time', verbose_name='Just in time')),
                ('whw_feedback', models.BooleanField(default=False, help_text='Feedback answers "Where am I going", "How am I going", "Where next"', verbose_name='Where, how, where next')),
                ('task_feedback', models.BooleanField(default=False, help_text='Task feedback to students learning something new', verbose_name='Task feedback')),
                ('process_feedback', models.BooleanField(default=False, help_text='Process feedback to students who are becoming more proficient', verbose_name='Process feedback')),
                ('sr_feedback', models.BooleanField(default=False, help_text='Self-regulation feedback to students with high proficiency', verbose_name='Self-regulation feedback')),
                ('praise', models.BooleanField(default=False, verbose_name='Praise')),
                ('peer_feedback', models.BooleanField(default=False, help_text='Working with students to ensure peer feedback is accurate', verbose_name='Peer feedback')),
                ('seeking_feedback', models.BooleanField(default=False, help_text='Seeking feedback from students', verbose_name='Seeking feedback')),
                ('other', models.CharField(blank=True, default='', help_text='Please be specific', max_length=1000, verbose_name='Other')),
            ],
            options={
                'verbose_name': 'Effective Feedback Teaching observation',
                'verbose_name_plural': 'Effective Feedback observations',
            },
            bases=('observations.mbminteraction',),
        ),
        migrations.CreateModel(
            name='IPTInteraction',
            fields=[
                ('mbminteraction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.MbMInteraction')),
                ('demonstrating_care', models.BooleanField(default=False, help_text='Demonstrating to student(s) that he/she cares about their learning', verbose_name='Relational trust')),
                ('providing_feedback', models.BooleanField(default=False, help_text='Providing feedback to students', verbose_name='Providing feedback')),
                ('dialogue', models.BooleanField(default=False, help_text='Engaged in dialogue with students', verbose_name='Engaged in dialogue')),
                ('safe_classroom', models.BooleanField(default=False, help_text='Ensuring it is safe to make mistakes', verbose_name='Safe classroom')),
                ('clarifying_lp', models.BooleanField(default=False, help_text='Making learning progressions clear to students', verbose_name='Clarifying learning progressions')),
                ('providing_challenge', models.BooleanField(default=False, verbose_name='Providing challenge')),
                ('high_exp', models.BooleanField(default=False, help_text='Setting and demonstrating high expectations', verbose_name='High expectations')),
                ('focus_learning', models.BooleanField(default=False, help_text='Managing classroom so learning is focus, not behaviour', verbose_name='Focussing on learning')),
                ('range_strategies', models.BooleanField(default=False, help_text='Using a wide range of instructional strategies', verbose_name='Wide range of strategies')),
                ('other', models.CharField(blank=True, default='', help_text='Please be specific', max_length=1000, verbose_name='Other')),
            ],
            options={
                'verbose_name': 'Inspired and Passionate Teaching observation',
                'verbose_name_plural': 'Inspired and Passionate observations',
            },
            bases=('observations.mbminteraction',),
        ),
        migrations.CreateModel(
            name='KtIInteraction',
            fields=[
                ('mbminteraction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.MbMInteraction')),
                ('learning_evidence', models.BooleanField(default=False, help_text='Gathering evidence of student progress or learning', verbose_name='Gathering Evidence')),
                ('evaluating_effect', models.BooleanField(default=False, help_text='Evaluating the effect he/she is having on students learning', verbose_name='Evaluating effect')),
                ('acting_knowledge', models.BooleanField(default=False, help_text='Acting on his/her knowledge of student learning', verbose_name='Acting on knowledge')),
                ('sharing_understanding', models.BooleanField(default=False, help_text='The student(s) are sharing their understanding of learning', verbose_name='Students sharing understanding')),
                ('other', models.CharField(blank=True, default='', help_text='Please be specific', max_length=1000, verbose_name='Other')),
            ],
            options={
                'verbose_name': 'Know thine Impact observation',
                'verbose_name_plural': 'Know thine Impact observations',
            },
            bases=('observations.mbminteraction',),
        ),
        migrations.AddField(
            model_name='reviewobservation',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Teacher'),
        ),
        migrations.AddField(
            model_name='numberedresult',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='observations.ReviewObservation'),
        ),
        migrations.AddField(
            model_name='item',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='observations.Obsform'),
        ),
        migrations.AddField(
            model_name='feedbackobservation',
            name='observer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Observer'),
        ),
        migrations.AddField(
            model_name='feedbackobservation',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together=set([('name', 'description')]),
        ),
        migrations.AddField(
            model_name='fbinteraction',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='observations.FeedbackObservation'),
        ),
    ]
